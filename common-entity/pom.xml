<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>common-entity</name>
    <description>
        通用实体类模块(分层领域模型规约)。
        ----------------------------------------------------------------------------------------
        一方库：本工程内部子项目模块依赖的库（jar 包）--例如：只有和member相关包写入本工程下。
        二方库：公司内部发布到中央仓库，可供公司内部依赖的库（jar 包）。
        三方库：公司之外的开源的依赖库（jar 包）
        ----------------------------------------------------------------------------------------
        VO (View Object) : 显示层对象，通常是 Web 向模板渲染引擎层传输的对象。--可通用
        BO (Business Object) : 业务对象。可以由 Service 层输出的封装业务逻辑的对象。--可通用
        DTO (Data Transfer Object) : 数据传输对象， Service 和 Manager 向外传输的对象。--可通用
        DO (Data Object) : 数据对象，与数据库表结构一一对应，通过 DAO 层向上传输数据源对象。但，DO为java的关键字，使用会有错误，故改为DBO。--不可通用(在服务提供者内部)
        QUERY : 数据查询对象，各层接收上层的查询请求。注：超过2个参数的查询封装，禁止使用 Map 类来传输。--可通用
        ----------------------------------------------------------------------------------------
    </description>

    <parent>
        <groupId>me.loveshare</groupId>
        <artifactId>parent</artifactId>
        <relativePath>../parent/pom.xml</relativePath>
        <version>1.0.0</version>
    </parent>

    <artifactId>common-entity</artifactId>
    <version>${common-entity.version}</version>
    <packaging>jar</packaging>

    <dependencies>
        <!-- Api docs -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <!-- Json -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
        <!--Tools-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
    </dependencies>

</project>
